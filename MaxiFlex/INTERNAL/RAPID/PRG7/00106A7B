MODULE Global(SYSMODULE,NOSTEPIN)
    !====================================================================
    ! Module:
    ! Datum: 11.05.10
    ! Programmierer: AK
    ! Beschreibung: Globales Systemmodul muß in beiden Tasks aktiv sein
    !====================================================================
    !Globale Daten
    RECORD bazstate
        bool Turned;
        bool NewData;
        symnum ClampA;
        symnum ClampB;
        symnum State;
        string Cycle;
    ENDRECORD

    PERS bazstate Baz:=[FALSE,FALSE,1,1,1,"RunCycle"];
    PERS string sendbuffer{50}:=["","","","","","","","","","",
								 "","","","","","","","","","",
								 "","","","","","","","","","",
								 "","","","","","","","","","",
								 "","","","","","","","","",""];
    PERS bool bufferState{50}:=[FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
								FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
								FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
								FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,
								FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE];
    PERS BOOL clientConnected:=FALSE;
    PERS string clientMessageTest1:="";
	PERS num cntr:=16;

    PROC tpWriteSocket(string msg,string msgType)
		sendbuffer{cntr}:=msgType+msg+";";
		bufferState{cntr}:=TRUE;	
		cntr:=cntr+1;
		IF (cntr>=50) THEN
			cntr:=1;
        ENDIF
		!WaitTime 0.16;
    ENDPROC

ENDMODULE
